Measure	DAX Expression	Parent	Child	Tables	Columns
Sales Amount	SUMX ( Sales, Sales[Quantity] * Sales[Net Price] )		# Products; ABC Sales Amount	Sales	Sales[Quantity]; Sales[Net Price]
# Products	\nVAR ProdSales =\n    CALCULATETABLE (\n        ADDCOLUMNS (\n            SUMMARIZE ( Sales, 'Product'[ProductKey] ),\n            "@Sales", [Sales Amount]\n        ),\n        ALLSELECTED ( 'Product' )\n    )\nVAR AllSales =\n    CALCULATE (\n        [Sales Amount],\n        ALLSELECTED ( 'Product' )\n    )\nVAR ProdSalesPerc =\n    ADDCOLUMNS (\n        ProdSales,\n        "@AggSales%",\n        VAR CurrentSalesAmt = [@Sales]\n        VAR CumulatedSales =\n            SUMX (\n                FILTER (\n                    ProdSales,\n                    [@Sales] >= CurrentSalesAmt\n                ),\n                [@Sales]\n            )\n        VAR Perc = \n            DIVIDE (\n                CumulatedSales,\n                AllSales\n            )\n        RETURN\n            MIN ( Perc, 1 ) -- Avoid >100% in case of rounding issues\n    )\nVAR ProductsInClass =\n    FILTER (\n        CROSSJOIN (\n            ProdSalesPerc,\n            'ABC Classes'\n        ),\n        AND (\n            [@AggSales%] > 'ABC Classes'[Lower Boundary],\n            [@AggSales%] <= 'ABC Classes'[Upper Boundary]\n        )\n    )\nVAR Result =\n    CALCULATE (\n        COUNTROWS ( 'Product' ),\n        KEEPFILTERS ( ProductsInClass )\n    )\nRETURN\n    Result	Sales Amount		Sales; Product; ABC Classes	Product[ProductKey]; Sales[Quantity]; Sales[Net Price]; ABC Classes[Lower Boundary]; ABC Classes[Upper Boundary]
ABC Sales Amount	\n-- Customization required for different models:\n--   'Product'             --> Table with the entity to segment (customers, products, ...)\n--   'Product'[ProductKey] --> Column that identifies the entity to segment \n--   [Sales Amount]        --> Measure to use for ABC segmentation\n--\nVAR SalesByProduct =\n    CALCULATETABLE (\n        ADDCOLUMNS (\n            SUMMARIZE ( Sales, 'Product'[ProductKey] ),\n            "@ProdSales", [Sales Amount]\n        ),\n        ALLSELECTED ( 'Product' )\n    )\nVAR AllSales =\n    CALCULATE (\n        [Sales Amount],\n        ALLSELECTED ( 'Product' )\n    )\nVAR CumulatedPctByProduct =\n    ADDCOLUMNS (\n        SalesByProduct,\n        "@CumulatedPct",\n        VAR CurrentSalesAmt = [@ProdSales]\n        VAR CumulatedSales =\n            FILTER (\n                SalesByProduct,\n                [@ProdSales] >= CurrentSalesAmt\n            )\n        VAR CumulatedSalesAmount =\n            SUMX (\n                CumulatedSales,\n                [@ProdSales]\n            )\n        VAR Perc = \n            DIVIDE (\n                CumulatedSalesAmount,\n                AllSales\n            )\n        RETURN\n            MIN ( Perc, 1 ) -- Avoid >100% in case of rounding issues\n    )\nVAR ProductsInClass =\n    FILTER (\n        CROSSJOIN (\n            CumulatedPctByProduct,\n            'ABC Classes'\n        ),\n        AND (\n            [@CumulatedPct] > 'ABC Classes'[Lower Boundary],\n            [@CumulatedPct] <= 'ABC Classes'[Upper Boundary]\n        )\n    )\nVAR Result =\n    CALCULATE (             -- The pattern is the same for every measure, just\n        [Sales Amount],     -- change this measure reference for other measures\n        KEEPFILTERS ( ProductsInClass )\n    )\nRETURN\n    Result	Sales Amount		Sales; Product; ABC Classes	Product[ProductKey]; Sales[Quantity]; Sales[Net Price]; ABC Classes[Lower Boundary]; ABC Classes[Upper Boundary]
CurrentUser	USERPRINCIPALNAME()				